Objecte de prova: Subclasse DistItem, que forma part de la classe: Distancia

Elements integrats a la prova: mockitos de la classe Item, Atribut (AtrBool, AtrString, AtrDouble, AtrInt), TipusAtribut

Drivers: Aquest és un driver creat amb Junit, i per tant s'han fet una sèrie de tests, 
		que comproven el bon funcionament de la classe. Aquests tests 'shan fet 
		amb el proposit de provar el funcionament de totes les funcions públiques
		de la classe, i per tant també implícitament les privades (si es que en té), 
		intentant trobar aquells casos conflictius que ens puguin fer trobar algun error. 

Mockitos: Item, Atribut (AtrBool, AtrString, AtrDouble, AtrInt), TipusAtribut

Fitxers de dades necessaris: Només es necessari l'executable jar. (A LA CARPETA EXE)

Valors estudiats: A cada test, durant la seva execució s'imprimeix per pantalla el que realitzarà / comprovarà aquest. 
		De totes formes, els valors estudiats son: 
	

		- EXECUCIO TEST1 :  comprovar funcionament constructora 1 (constructora buida)

		- EXECUCIO TEST2 :  comprovar funcionament constructora 2 amb un set de items, buit, i executant posteriorment la funcio 'getTotesDistancies' (hauria de ser un map buit)

		- EXECUCIO TEST3 :  Mateix que TEST2, pero aquesta vegada el set contindrà un item, amb una serie de atributs de diversos tipus. (el resultat de 'getTotesDistancies' hauria de seguir tenint cap distància)

		- EXECUCIO TEST4 :  Ara crearem una instancia de la classe amb tres items, els quals tenen exactament els mateixos atributs.
			Executarem la funcio 'getTotesDistancies', i també 'getDistanciaItemItem' per comprovar que la distancia entre aquests 3 es 0

		- EXECUCIO TEST5 :  Similar al TEST4, però ara l'ítem 3 no coincidirà en cap atribut de cada Tipus Atribut de ni item 1 ni item 3. Pel que fa als atributs de tipus Int i Double aquesta distancia serà bastant gran. 
			Entre l'item 2 i 1 aquests dos seguiran tenint els mateixos atributs
			Per tant, la distancia entre item 1 i item 2 hauria de ser 0, mentre que la distancia entre item 2 i item 3, i item 1 i item 3 hauria de ser la mateixa, i amb un valor considerablement gran

		- EXECUCIO TEST6 :  El mateix que el TEST5, pero primer cridarem la constructora buida, i afegirem els 3 items amb la funcio 'afegirItem', per comprovar que aquesta funciona correctament
			Un cop haguem impres el resultat de la funcio 'getTotesDistancies', eliminarem l'usuari 1 i tornarem a imprimir el resultat, per comprovar que la funcio 'eliminarItem' funciona

		- EXECUCIO TEST7 :  El mateix que el TEST5, pero aquest cop els tres items trindran atributs diferents entre tots ells mateixos




Efectes estudiats:        -


Operativa: 
	- S'executa el jar. 
	- Els testos s'executaràn un rere l'altre. 
	- Durant l'execució de cada test en tot moment s'informarà per pantalla del que s'està fent. 
	- Si es produeix algun error (excepció implícita o ja sigui creada per nosaltres) s'informarà per pantalla. 
	- Un cop acabin tots els tests, s'informarà per pantalla això mateix. 